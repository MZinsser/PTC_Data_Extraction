#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Oct  3 17:33:31 2019

@author: marleezinsser
"""
#What this script does now:
#1. Maintain list of PMIDs from PubMed for a specific search query
#2. Convert that list into a format searchable in PubTator Central (PTC)
#3. Use PTC API to get annotated articles (right now just 100 but should be able
#to do up to 1000) for PMID list. Right now in Pubtator Format
#4. Write data to csv file, then read back in and parse into df


#To-do:
#Convert main body of script into a function that can be used to make multiple calls to api
#Figure out how to search PubMed in "batches"... 
    #Need to research using "usehistory" and "restart" e-utilities




from Bio import Entrez
import requests
import xml.etree.ElementTree as ET
from lxml import etree
import csv
import json
import pandas as pd
import urllib.parse





#Define a search function to get PMIDs from PubMed. Using biopython here:
#
def search(query):
    Entrez.email = 'marleejzinsser@gmail.com'
    handle = Entrez.esearch(db='pubmed', 
                            restart = '100',
                            sort='relevance', 
                            retmax='100',
                            usehistory = 'y',
                            retmode='xml', 
                            term=query)
    results = Entrez.read(handle)
    return results

#Use my search function to search for 'heart failure'
results = search('heart failure')
#Store the PMIDs
#id_list = results['IdList']

id_list = results['IdList']
#This line gives me a comma-separated list, suitable format for a get call to 
#PubTator Central API
ids = ','.join(id_list)


#A few different way to format the "get",I think I will end up using another format that allows me to specify type as "Disease":
#Just leaving these here for now in case useful later
response0 = requests.get("https://www.ncbi.nlm.nih.gov/research/pubtator-api/publications/export/pubtator?pmids=3958000")
response1 = requests.get("https://www.ncbi.nlm.nih.gov/research/pubtator-api/publications/export/pubtator?pmids= 31555894,31556034")
response2 = requests.get("https://www.ncbi.nlm.nih.gov/research/pubtator-api/publications/export/pubtator?pmids= 29519873,30093543,30030334,28780577,29490935,28754809,29305560,30262636,27048772,29622597,28775102,29440452,28270426,30496744,30311498,27492941,30355727,30467108,29556692,29129702,29940142,30426860,27056969,29657079,31010113,30902185,30867288,30934680,30760547,30641441,30414045,30191481,30515977,30549006,30310926,29791869,29127235,29034473,30514557,30247170,30217578,29544410,29500602,30482191,30474554,30071487,30642654,30205856,29400650,29189081,29063675,29294390,30012423,29766347,30636220,29982937,29980429,29987831,26661320,28359939,30051388,28595547,30989444,30223427,27402805,30227610,30225714,29574800,26438784,28920469,30786071,30357874,30097045,30009777,30047538,29859753,29747223,29160855,28842438,29962876,29935580,29929790,30571359,29679848,29272987,29196133,30884846,27055812,29430653,28635515,29992494,30268703,29538649,30406290,30169913,30404073,29852125,31278142,28574157,30528680")


#Construct a url from the list of IDs plus the base https components
url = "https://www.ncbi.nlm.nih.gov/CBBresearch/Lu/Demo/RESTful/tmTool.cgi/Disease/" + ids + "/pubtator/"


# Get call that allows me to speciy Disease as type, enter 100-1000 PMIDS,
# and specify format as BioC, json, or PubMed
response = requests.get(url)
#Print the responses in (currently) Pubtator Format
print (response.text.encode("utf-8"))

#convert the Response to a string in Pubtator Format (henceforth ptf)
ptf_str = response.text

#Write the ptf string to a csv file
with open ("output.csv", "w")as f:
    f.write(ptf_str)
    

#Read in csv file and convert to df
columns = ['PMID', 'Delete1', 'Delete2', 'Disease','Delete3', 'MESH']
df = pd.DataFrame(columns = columns)
df = pd.read_csv('output.csv', delimiter = '\t',
                 names = columns)
#Delete unwanted columns
del df ['Delete1']
del df ['Delete2']
del df ['Delete3']






